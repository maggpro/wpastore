// WPA.STORE Mobile App - –ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–ø–∏—Å–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
class WPAMobileApp {
    constructor() {
        this.currentPage = 'home';
        this.searchQuery = '';
        this.init();
    }

    init() {
        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è WPA.STORE...');
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        this.initComponents();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü
        this.initPages();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        this.setupNavigation();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞
        this.initSearch();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º
        this.initForms();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PWA
        this.initPWA();
        
        // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        this.loadData();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–º–∞—à–Ω—é—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        this.showPage('home');
        
        // –û—Ç–∫–ª–∞–¥—ã–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Å–æ–±—ã—Ç–∏–π –¥–æ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ DOM
        setTimeout(() => {
            this.setupEvents();
        }, 100);
        
        console.log('‚úÖ –ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    initComponents() {
        console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...');
        if (typeof Components !== 'undefined') {
            Components.init();
        }
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü
    initPages() {
        console.log('üì± –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü...');
        
        // –ó–∞–ø–æ–ª–Ω—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ —Ñ–æ—Ä–º–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        const categorySelect = document.getElementById('appCategory');
        if (categorySelect && typeof WPA_DATA !== 'undefined') {
            categorySelect.innerHTML = '<option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</option>';
            WPA_DATA.categories.forEach(category => {
                const option = document.createElement('option');
                option.value = category.id;
                option.textContent = category.name;
                categorySelect.appendChild(option);
            });
            console.log('–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Ñ–æ—Ä–º—É:', WPA_DATA.categories.length);
        }
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    setupNavigation() {
        console.log('üß≠ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏...');
        
        // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ tab-link —ç–ª–µ–º–µ–Ω—Ç—ã
        const tabLinks = document.querySelectorAll('.tab-link');
        console.log('–ù–∞–π–¥–µ–Ω–æ tab-link —ç–ª–µ–º–µ–Ω—Ç–æ–≤:', tabLinks.length);
        
        tabLinks.forEach((link, index) => {
            const page = link.getAttribute('data-page');
            console.log(`–ù–∞—Å—Ç—Ä–æ–π–∫–∞ tab-link ${index + 1}:`, page);
            
            link.addEventListener('click', (e) => {
                e.preventDefault();
                console.log('üëÜ –ö–ª–∏–∫ –ø–æ tab-link:', page);
                this.showPage(page);
            });
        });
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
    showPage(pageName) {
        console.log('üîÑ –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É:', pageName);
        
        // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        const pages = document.querySelectorAll('.page');
        pages.forEach(page => {
            page.style.display = 'none';
        });
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        const targetPage = document.querySelector(`[data-name="${pageName}"]`);
        if (targetPage) {
            targetPage.style.display = 'block';
            this.currentPage = pageName;
            console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–∫–∞–∑–∞–Ω–∞:', pageName);
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            this.loadPageContent(pageName);
        } else {
            console.error('‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞:', pageName);
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É
        this.updateActiveTab(pageName);
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
    updateActiveTab(pageName) {
        const tabLinks = document.querySelectorAll('.tab-link');
        tabLinks.forEach(link => {
            link.classList.remove('tab-link-active');
            if (link.getAttribute('data-page') === pageName) {
                link.classList.add('tab-link-active');
            }
        });
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    loadPageContent(pageName) {
        console.log('üì• –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', pageName);
        
        switch (pageName) {
            case 'home':
                this.loadHomePage();
                break;
            case 'categories':
                this.loadCategoriesPage();
                break;
            case 'submit':
                this.loadSubmitPage();
                break;
            case 'admin':
                this.loadAdminPage();
                break;
            case 'settings':
                this.loadSettingsPage();
                break;
            default:
                console.warn('‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞:', pageName);
        }
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞
    initSearch() {
        console.log('üîç –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞...');
        
        const searchInput = document.getElementById('searchInput');
        const searchBtn = document.querySelector('.search-button');

        if (searchInput && searchBtn) {
            // –ü–æ–∏—Å–∫ –ø–æ –∫–Ω–æ–ø–∫–µ
            searchBtn.addEventListener('click', () => {
                this.performSearch(searchInput.value);
            });

            // –ü–æ–∏—Å–∫ –ø–æ Enter
            searchInput.addEventListener('keypress', (e) => {
                if (e.key === 'Enter') {
                    this.performSearch(searchInput.value);
                }
            });

            console.log('‚úÖ –ü–æ–∏—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        } else {
            console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç—ã –ø–æ–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        }
    }

    // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞
    performSearch(query) {
        console.log('üîç –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞:', query);
        
        this.searchQuery = query.trim();
        
        if (!this.searchQuery) {
            return;
        }

        // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
        const searchResults = this.searchApps(this.searchQuery);
        console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:', searchResults.length);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        this.showSearchResults(searchResults);
    }

    // –ü–æ–∏—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
    searchApps(query) {
        if (typeof DataManager !== 'undefined') {
            return DataManager.searchApps(query);
        }
        return [];
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
    showSearchResults(results) {
        const featuredApps = document.getElementById('featuredApps');
        const recentApps = document.getElementById('recentApps');
        
        if (featuredApps) {
            featuredApps.innerHTML = '';
            if (results.length > 0) {
                results.forEach(app => {
                    const card = this.createAppCard(app);
                    if (card) featuredApps.appendChild(card);
                });
            } else {
                featuredApps.innerHTML = '<p class="no-results">–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p>';
            }
        }
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º
    initForms() {
        console.log('üìù –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º...');
        
        const submitForm = document.getElementById('submitAppForm');
        if (submitForm) {
            submitForm.addEventListener('submit', (e) => {
                e.preventDefault();
                this.handleAppSubmission();
            });
            console.log('‚úÖ –§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
        } else {
            console.error('‚ùå –§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        }
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PWA
    initPWA() {
        console.log('üì± –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PWA...');
        
        if ('serviceWorker' in navigator) {
            navigator.serviceWorker.register('/sw.js')
                .then(registration => {
                    console.log('‚úÖ ServiceWorker –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:', registration);
                    this.setupPWAInstall();
                })
                .catch(error => {
                    console.log('‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ServiceWorker:', error);
                });
        } else {
            console.log('‚ÑπÔ∏è Service Worker –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
        }
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PWA —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    setupPWAInstall() {
        console.log('üì• –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PWA —É—Å—Ç–∞–Ω–æ–≤–∫–∏...');
        
        let deferredPrompt;
        const installContainer = document.getElementById('pwaInstallContainer');
        const installBtn = document.getElementById('pwaInstallBtn');

        // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏–µ beforeinstallprompt
        window.addEventListener('beforeinstallprompt', (e) => {
            e.preventDefault();
            deferredPrompt = e;
            
            if (installContainer) {
                installContainer.style.display = 'block';
                console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ PWA —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–æ–∫–∞–∑–∞–Ω–∞');
            }
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        if (installBtn) {
            installBtn.addEventListener('click', async () => {
                if (deferredPrompt) {
                    deferredPrompt.prompt();
                    const { outcome } = await deferredPrompt.userChoice;
                    
                    if (outcome === 'accepted') {
                        this.showNotification('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!', 'success');
                        if (installContainer) {
                            installContainer.style.display = 'none';
                        }
                    }
                    
                    deferredPrompt = null;
                }
            });
            console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ PWA —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');
        }
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    async loadData() {
        console.log('üìä –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...');
        
        try {
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º DataManager –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
            if (typeof DataManager !== 'undefined') {
                DataManager.init();
                console.log('‚úÖ DataManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            }
            
            console.log('‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
        }
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    async loadHomePage() {
        console.log('üè† –ó–∞–≥—Ä—É–∑–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...');
        
        try {
            let featuredApps = [];
            let recentApps = [];
            
            // –í—Å–µ–≥–¥–∞ –ø—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ GitHub (–ø—É–±–ª–∏—á–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥)
            if (typeof ConfigManager !== 'undefined' && window.GitHubDB) {
                const useGitHub = ConfigManager.get('github.useIssuesAsDB', true);
                
                if (useGitHub) {
                    console.log('üì° –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞ GitHub...');
                    const githubDB = new GitHubDB({
                        owner: ConfigManager.get('github.owner', 'maggpro'),
                        repo: ConfigManager.get('github.repo', 'wpastore'),
                        token: ConfigManager.get('github.token', '') // –ù–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è —á—Ç–µ–Ω–∏—è
                    });
                    
                    try {
                        const allApps = await githubDB.getAllApps();
                        const approvedApps = allApps.filter(app => app.status === 'approved');
                        featuredApps = approvedApps.filter(app => app.featured).slice(0, 6);
                        recentApps = approvedApps.slice(0, 6);
                        
                        console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∏–∑ GitHub:', { 
                            total: allApps.length, 
                            approved: approvedApps.length,
                            featured: featuredApps.length, 
                            recent: recentApps.length 
                        });
                    } catch (githubError) {
                        console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ GitHub:', githubError.message);
                        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å fallback –¥–∞–Ω–Ω—ã–º–∏
                    }
                }
            }
            
            // Fallback –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            if (featuredApps.length === 0 && typeof DataManager !== 'undefined') {
                console.log('üìÇ Fallback –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ...');
                featuredApps = DataManager.getFeaturedApps();
                recentApps = DataManager.getRecentApps();
            }
            
            // Fallback –Ω–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
            if (featuredApps.length === 0 && typeof WPA_DATA !== 'undefined') {
                console.log('üìÑ Fallback –Ω–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ...');
                featuredApps = WPA_DATA.apps.filter(app => app.featured).slice(0, 6);
                recentApps = WPA_DATA.apps.slice(0, 6);
            }
            
            console.log('üéØ –§–∏–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', { featured: featuredApps.length, recent: recentApps.length });
            
            this.renderApps(featuredApps, 'featuredApps');
            this.renderApps(recentApps, 'recentApps');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', error);
            // –ü–æ—Å–ª–µ–¥–Ω–∏–π fallback –Ω–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
            if (typeof WPA_DATA !== 'undefined') {
                const featuredApps = WPA_DATA.apps.filter(app => app.featured).slice(0, 6);
                const recentApps = WPA_DATA.apps.slice(0, 6);
                this.renderApps(featuredApps, 'featuredApps');
                this.renderApps(recentApps, 'recentApps');
            }
        }
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    loadCategoriesPage() {
        console.log('üìÇ –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π...');
        
        const categoriesContainer = document.getElementById('categoriesGrid');
        console.log('üîç –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', categoriesContainer);
        console.log('üìä WPA_DATA –¥–æ—Å—Ç—É–ø–µ–Ω:', typeof WPA_DATA !== 'undefined');
        
        if (categoriesContainer && typeof WPA_DATA !== 'undefined') {
            categoriesContainer.innerHTML = '';
            console.log('üìã –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏:', WPA_DATA.categories);
            
            WPA_DATA.categories.forEach((category, index) => {
                console.log(`üéØ –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${index + 1}:`, category.name);
                const card = this.createCategoryCard(category);
                if (card) {
                    categoriesContainer.appendChild(card);
                    console.log(`‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ ${category.name} –¥–æ–±–∞–≤–ª–µ–Ω–∞`);
                } else {
                    console.error(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É –¥–ª—è ${category.name}`);
                }
            });
            console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', WPA_DATA.categories.length);
        } else {
            console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ WPA_DATA –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
            if (!categoriesContainer) {
                console.error('‚ùå categoriesContainer –Ω–µ –Ω–∞–π–¥–µ–Ω');
            }
            if (typeof WPA_DATA === 'undefined') {
                console.error('‚ùå WPA_DATA –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω');
            }
        }
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    loadSubmitPage() {
        console.log('‚ûï –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
        // –§–æ—Ä–º–∞ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –∞–¥–º–∏–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    loadAdminPage() {
        console.log('üëë –ó–∞–≥—Ä—É–∑–∫–∞ –∞–¥–º–∏–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—ã...');
        this.loadPendingApps();
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫
    loadSettingsPage() {
        console.log('‚öôÔ∏è –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫...');
        this.loadSettings();
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –æ–∂–∏–¥–∞—é—â–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
    async loadPendingApps() {
        console.log('‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞ –æ–∂–∏–¥–∞—é—â–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π...');
        
        const pendingContainer = document.getElementById('pendingApps');
        if (!pendingContainer) {
            console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ–∂–∏–¥–∞—é—â–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }
        
        pendingContainer.innerHTML = '<p class="loading">–ó–∞–≥—Ä—É–∑–∫–∞ –æ–∂–∏–¥–∞—é—â–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π...</p>';
        
        try {
            let pendingApps = [];
            
            // –í—Å–µ–≥–¥–∞ –ø—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ GitHub (–ø—É–±–ª–∏—á–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥)
            if (typeof ConfigManager !== 'undefined' && window.GitHubDB) {
                const useGitHub = ConfigManager.get('github.useIssuesAsDB', true);
                
                if (useGitHub) {
                    console.log('üì° –ó–∞–≥—Ä—É–∑–∫–∞ –æ–∂–∏–¥–∞—é—â–∏—Ö –∏–∑ GitHub...');
                    const githubDB = new GitHubDB({
                        owner: ConfigManager.get('github.owner', 'maggpro'),
                        repo: ConfigManager.get('github.repo', 'wpastore'),
                        token: ConfigManager.get('github.token', '')
                    });
                    
                    try {
                        const allApps = await githubDB.getAllApps();
                        pendingApps = allApps.filter(app => app.status === 'pending');
                        console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –æ–∂–∏–¥–∞—é—â–∏—Ö –∏–∑ GitHub:', pendingApps.length);
                    } catch (githubError) {
                        console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ GitHub:', githubError.message);
                        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
                        pendingContainer.innerHTML = `
                            <div class="warning-block">
                                <h3>‚ö†Ô∏è –ù—É–∂–µ–Ω –¥–æ—Å—Ç—É–ø –∫ GitHub</h3>
                                <p>–î–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –Ω–µ–æ–±—Ö–æ–¥–∏–º GitHub —Ç–æ–∫–µ–Ω.</p>
                                <button class="button button-fill" onclick="mobileApp.showPage('settings')">
                                    –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç–æ–∫–µ–Ω
                                </button>
                            </div>
                        `;
                        return;
                    }
                }
            }
            
            // Fallback –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            if (pendingApps.length === 0 && typeof DataManager !== 'undefined') {
                console.log('üìÇ Fallback –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ...');
                pendingApps = DataManager.getPendingApps();
            }
            
            console.log('üìã –§–∏–Ω–∞–ª—å–Ω—ã–µ –æ–∂–∏–¥–∞—é—â–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', pendingApps.length);
            
            pendingContainer.innerHTML = '';
            
            if (pendingApps.length > 0) {
                pendingApps.forEach(app => {
                    const card = this.createPendingAppCard(app);
                    if (card) {
                        pendingContainer.appendChild(card);
                    }
                });
            } else {
                pendingContainer.innerHTML = '<p class="no-apps">–ù–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏</p>';
            }
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ–∂–∏–¥–∞—é—â–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π:', error);
            pendingContainer.innerHTML = '<p class="error">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π</p>';
        }
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    loadSettings() {
        console.log('‚öôÔ∏è –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫...');
        
        if (typeof ConfigManager !== 'undefined') {
            const owner = ConfigManager.get('github.owner', '');
            const repo = ConfigManager.get('github.repo', '');
            const token = ConfigManager.get('github.token', '');
            const useIssues = ConfigManager.get('github.useIssuesAsDB', false);
            
            const ownerInput = document.getElementById('githubOwner');
            const repoInput = document.getElementById('githubRepo');
            const tokenInput = document.getElementById('githubToken');
            const useIssuesSelect = document.getElementById('useIssuesAsDB');
            
            if (ownerInput) ownerInput.value = owner;
            if (repoInput) repoInput.value = repo;
            if (tokenInput) tokenInput.value = token;
            if (useIssuesSelect) useIssuesSelect.value = useIssues.toString();
        }
    }

    // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
    renderApps(apps, containerId) {
        console.log(`üé® –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: ${containerId}`);
        
        const container = document.getElementById(containerId);
        if (container) {
            container.innerHTML = '';
            if (apps.length > 0) {
                apps.forEach(app => {
                    const card = this.createAppCard(app);
                    if (card) {
                        container.appendChild(card);
                    }
                });
                console.log(`‚úÖ –†–µ–Ω–¥–µ—Ä–µ–Ω–æ ${apps.length} –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –≤ ${containerId}`);
            } else {
                container.innerHTML = '<p class="no-apps">–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–π –ø–æ–∫–∞ –Ω–µ—Ç</p>';
                console.log(`‚ÑπÔ∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä ${containerId} –ø—É—Å—Ç`);
            }
        } else {
            console.error(`‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä ${containerId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
        }
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    createAppCard(app) {
        if (typeof Components !== 'undefined') {
            return Components.createAppCard(app);
        }
        
        // Fallback —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏
        const card = document.createElement('div');
        card.className = 'app-card';
        card.innerHTML = `
            <div class="app-card-header">
                <div class="app-icon">
                    ${app.icon ? `<img src="${app.icon}" alt="${app.name}" onerror="this.style.display='none'; this.nextElementSibling.style.display='block';">` : ''}
                    <i class="fas fa-mobile-alt" style="display: ${app.icon ? 'none' : 'block'};"></i>
                </div>
                <div class="app-info">
                    <h3 class="app-name">${app.name}</h3>
                    <p class="app-description">${app.description}</p>
                    <div class="app-meta">
                        <span class="developer">üë®‚Äçüíª ${app.developer}</span>
                        <span class="category">üìÇ ${this.getCategoryName(app.category)}</span>
                    </div>
                </div>
            </div>
            <div class="app-card-actions">
                <button class="button button-small button-outline info-btn" onclick="event.stopPropagation(); mobileApp.showAppDetails(${JSON.stringify(app).replace(/"/g, '&quot;')})">
                    <i class="fas fa-info-circle"></i> –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                </button>
                ${app.website ? `<button class="button button-small button-fill install-btn" onclick="event.stopPropagation(); mobileApp.installWPAApp(${JSON.stringify(app).replace(/"/g, '&quot;')})">
                    <i class="fas fa-download"></i> –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
                </button>` : ''}
            </div>
        `;
        
        card.addEventListener('click', () => {
            this.showAppDetails(app);
        });
        
        return card;
    }

    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ WPA –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    installWPAApp(app) {
        console.log('üì± –£—Å—Ç–∞–Ω–æ–≤–∫–∞ WPA –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', app.name);
        
        if (!app.website) {
            this.showNotification('‚ùå –£ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ—Ç –≤–µ–±-—Å–∞–π—Ç–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏', 'error');
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–∏ –±—Ä–∞—É–∑–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–∫—É PWA
        if ('serviceWorker' in navigator && 'PushManager' in window) {
            // –ü—ã—Ç–∞–µ–º—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–∫ PWA
            this.installAsPWA(app);
        } else {
            // Fallback: –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ
            this.openWPAApp(app);
        }
    }

    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–∞–∫ PWA
    async installAsPWA(app) {
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            if (window.matchMedia('(display-mode: standalone)').matches) {
                this.showNotification('‚ÑπÔ∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ', 'info');
                return;
            }

            // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –º–∞–Ω–∏—Ñ–µ—Å—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            // –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π URL –¥–ª—è –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞
            let manifestUrl;
            try {
                console.log('üîç –ò—Å—Ö–æ–¥–Ω—ã–π website:', app.website);
                
                // –£–±–∏—Ä–∞–µ–º —Ö—ç—à –∏–∑ URL –ø–µ—Ä–µ–¥ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º –ø—É—Ç–∏ –∫ –º–∞–Ω–∏—Ñ–µ—Å—Ç—É
                const baseUrl = app.website.split('#')[0];
                console.log('üîç Base URL –±–µ–∑ —Ö—ç—à–∞:', baseUrl);
                
                // –ï—Å–ª–∏ website –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ /, –¥–æ–±–∞–≤–ª—è–µ–º manifest.json
                if (baseUrl.endsWith('/')) {
                    manifestUrl = baseUrl + 'manifest.json';
                } else {
                    // –ò–Ω–∞—á–µ –¥–æ–±–∞–≤–ª—è–µ–º /manifest.json
                    manifestUrl = baseUrl + '/manifest.json';
                }
                
                console.log('üîç –ò—â–µ–º –º–∞–Ω–∏—Ñ–µ—Å—Ç –ø–æ –∞–¥—Ä–µ—Å—É:', manifestUrl);
                console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ URL —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
                
                const response = await fetch(manifestUrl);
                
                if (response.ok) {
                    const manifest = await response.json();
                    console.log('‚úÖ –ú–∞–Ω–∏—Ñ–µ—Å—Ç –Ω–∞–π–¥–µ–Ω:', manifest);
                    this.showNotification('üéâ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç PWA —É—Å—Ç–∞–Ω–æ–≤–∫—É!', 'success');
                    
                    // –ü—ã—Ç–∞–µ–º—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–∫ PWA
                    try {
                        await this.installPWA(manifest, app);
                    } catch (error) {
                        console.log('‚ùå –û—à–∏–±–∫–∞ PWA —É—Å—Ç–∞–Ω–æ–≤–∫–∏, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –∫–∞–∫ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:', error);
                        this.openWPAApp(app);
                    }
                } else {
                    // –ú–∞–Ω–∏—Ñ–µ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –∫–∞–∫ –æ–±—ã—á–Ω–æ–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
                    console.log('üì± –ú–∞–Ω–∏—Ñ–µ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –∫–∞–∫ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
                    this.openWPAApp(app);
                }
            } catch (error) {
                console.log('PWA —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –∫–∞–∫ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
                this.openWPAApp(app);
            }
        } catch (error) {
            console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ PWA:', error);
            this.openWPAApp(app);
        }
    }

    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PWA –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    async installPWA(manifest, app) {
        console.log('üöÄ –ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ PWA:', app.name);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–∏ –±—Ä–∞—É–∑–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–∫—É PWA
        if (!('BeforeInstallPromptEvent' in window)) {
            console.log('üì± –ë—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç PWA —É—Å—Ç–∞–Ω–æ–≤–∫—É');
            this.showNotification('üì± –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç PWA —É—Å—Ç–∞–Ω–æ–≤–∫—É. –û—Ç–∫—Ä—ã–≤–∞—é –∫–∞–∫ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.', 'info');
            this.openWPAApp(app);
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        if (window.matchMedia('(display-mode: standalone)').matches) {
            console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
            this.showNotification('‚ÑπÔ∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ –≤–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ', 'info');
            return;
        }

        // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–∫–∞–∑–∞—Ç—å prompt –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        try {
            // –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
            const newWindow = window.open(app.website, '_blank');
            
            if (newWindow) {
                this.showNotification('üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç–æ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ PWA.', 'info');
                
                // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
                this.addToInstalledApps(app);
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ
                setTimeout(() => {
                    this.showNotification('üí° –î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏: –Ω–∞–∂–º–∏—Ç–µ ‚ãÆ ‚Üí "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"', 'info');
                }, 2000);
            } else {
                this.showNotification('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ. –í–æ–∑–º–æ–∂–Ω–æ, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω popup.', 'error');
            }
        } catch (error) {
            console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ PWA:', error);
            this.openWPAApp(app);
        }
    }

    // –û—Ç–∫—Ä—ã—Ç–∏–µ WPA –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    openWPAApp(app) {
        this.showNotification(`üåê –û—Ç–∫—Ä—ã–≤–∞—é "${app.name}" –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ`, 'info');
        
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ/–≤–∫–ª–∞–¥–∫–µ
        const newWindow = window.open(app.website, '_blank');
        
        if (newWindow) {
            // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
            this.addToInstalledApps(app);
            this.showNotification(`‚úÖ "${app.name}" –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Å–ø–∏—Å–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π`, 'success');
        } else {
            this.showNotification('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ. –í–æ–∑–º–æ–∂–Ω–æ, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω popup', 'error');
        }
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
    addToInstalledApps(app) {
        try {
            const installedApps = JSON.parse(localStorage.getItem('wpa_installed_apps') || '[]');
            const existingIndex = installedApps.findIndex(installed => installed.website === app.website);
            
            if (existingIndex === -1) {
                installedApps.push({
                    ...app,
                    installedAt: new Date().toISOString(),
                    lastUsed: new Date().toISOString()
                });
                
                localStorage.setItem('wpa_installed_apps', JSON.stringify(installedApps));
                console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Å–ø–∏—Å–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö');
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ —Å–ø–∏—Å–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö:', error);
        }
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    createCategoryCard(category) {
        console.log(`üé® –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${category.name}`);
        
        if (typeof Components !== 'undefined') {
            console.log('üîß –ò—Å–ø–æ–ª—å–∑—É–µ–º Components.createCategoryCard');
            return Components.createCategoryCard(category);
        }
        
        // Fallback —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        const card = document.createElement('div');
        card.className = 'category-card';
        card.innerHTML = `
            <div class="category-icon">
                <i class="fas ${this.getCategoryIcon(category.id)}"></i>
            </div>
            <div class="category-content">
                <h3 class="category-name">${category.name}</h3>
                <p class="category-description">${category.description || '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'}</p>
                <div class="category-count">${this.getCategoryAppCount(category.id)} –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π</div>
            </div>
        `;
        
        console.log(`üéØ –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –¥–ª—è ${category.name}`);
        card.addEventListener('click', (e) => {
            console.log(`üëÜ –ö–ª–∏–∫ –ø–æ –∫–∞—Ä—Ç–æ—á–∫–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${category.name}`);
            e.preventDefault();
            e.stopPropagation();
            this.showCategoryApps(category);
        });
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è touch —Å–æ–±—ã—Ç–∏–π
        card.addEventListener('touchstart', (e) => {
            console.log(`üëÜ Touch start –ø–æ –∫–∞—Ä—Ç–æ—á–∫–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${category.name}`);
        });
        
        console.log(`‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ ${category.name} —Å–æ–∑–¥–∞–Ω–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞`);
        return card;
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –æ–∂–∏–¥–∞—é—â–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    createPendingAppCard(app) {
        if (typeof Components !== 'undefined') {
            return Components.createPendingAppCard(app);
        }
        
        // Fallback —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏
        const card = document.createElement('div');
        card.className = 'pending-app-card';
        card.innerHTML = `
            <div class="app-info">
                <h3>${app.name}</h3>
                <p>${app.description}</p>
                <div class="app-meta">
                    <span class="developer">${app.developer}</span>
                    <span class="category">${this.getCategoryName(app.category)}</span>
                </div>
            </div>
            <div class="app-actions">
                <button class="button button-small button-success approve-btn" data-id="${app.id}">
                    <i class="fas fa-check"></i> –û–¥–æ–±—Ä–∏—Ç—å
                </button>
                <button class="button button-small button-danger reject-btn" data-id="${app.id}">
                    <i class="fas fa-times"></i> –û—Ç–∫–ª–æ–Ω–∏—Ç—å
                </button>
            </div>
        `;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
        const approveBtn = card.querySelector('.approve-btn');
        const rejectBtn = card.querySelector('.reject-btn');
        
        if (approveBtn) {
            approveBtn.addEventListener('click', () => this.approveApp(app.id));
        }
        if (rejectBtn) {
            rejectBtn.addEventListener('click', () => this.rejectApp(app.id));
        }
        
        return card;
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    getCategoryName(categoryId) {
        if (typeof WPA_DATA !== 'undefined') {
            const category = WPA_DATA.categories.find(cat => cat.id === categoryId);
            return category ? category.name : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
        }
        return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    getCategoryIcon(categoryId) {
        const iconMap = {
            'productivity': 'fa-briefcase',
            'entertainment': 'fa-gamepad',
            'education': 'fa-graduation-cap',
            'health': 'fa-heartbeat',
            'finance': 'fa-chart-line',
            'social': 'fa-users',
            'utilities': 'fa-tools',
            'games': 'fa-dice'
        };
        return iconMap[categoryId] || 'fa-folder';
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    getCategoryAppCount(categoryId) {
        if (typeof WPA_DATA !== 'undefined') {
            return WPA_DATA.apps.filter(app => app.category === categoryId && app.status !== 'rejected').length;
        }
        return 0;
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    showAppDetails(app) {
        console.log('üì± –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', app.name);
        
        // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –¥–µ—Ç–∞–ª—è–º–∏
        const modal = document.createElement('div');
        modal.className = 'modal-overlay';
        modal.innerHTML = `
            <div class="modal-content">
                <div class="modal-header">
                    <div class="modal-app-info">
                        <div class="modal-app-icon">
                            ${app.icon ? `<img src="${app.icon}" alt="${app.name}" onerror="this.style.display='none'; this.nextElementSibling.style.display='block';">` : ''}
                            <i class="fas fa-mobile-alt" style="display: ${app.icon ? 'none' : 'block'};"></i>
                        </div>
                        <div class="modal-app-title">
                            <h2>${app.name}</h2>
                            <p class="modal-app-developer">üë®‚Äçüíª ${app.developer}</p>
                        </div>
                    </div>
                    <button class="close-btn">&times;</button>
                </div>
                <div class="modal-body">
                    <div class="app-description-section">
                        <h3>üìù –û–ø–∏—Å–∞–Ω–∏–µ</h3>
                        <p>${app.description}</p>
                    </div>
                    
                    <div class="app-details-section">
                        <h3>‚ÑπÔ∏è –î–µ—Ç–∞–ª–∏</h3>
                        <div class="app-details-grid">
                            <div class="detail-item">
                                <span class="detail-label">üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏—è:</span>
                                <span class="detail-value">${this.getCategoryName(app.category)}</span>
                            </div>
                            ${app.version ? `<div class="detail-item">
                                <span class="detail-label">üè∑Ô∏è –í–µ—Ä—Å–∏—è:</span>
                                <span class="detail-value">${app.version}</span>
                            </div>` : ''}
                            ${app.website ? `<div class="detail-item">
                                <span class="detail-label">üåê –°–∞–π—Ç:</span>
                                <span class="detail-value"><a href="${app.website}" target="_blank">${app.website}</a></span>
                            </div>` : ''}
                        </div>
                    </div>
                    
                    ${app.screenshots && app.screenshots.length > 0 ? `
                    <div class="app-screenshots-section">
                        <h3>üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç—ã</h3>
                        <div class="screenshots-grid">
                            ${app.screenshots.map(screenshot => `
                                <img src="${screenshot}" alt="–°–∫—Ä–∏–Ω—à–æ—Ç ${app.name}" onclick="window.open('${screenshot}', '_blank')">
                            `).join('')}
                        </div>
                    </div>
                    ` : ''}
                    
                    <div class="modal-actions">
                        ${app.website ? `<button class="button button-fill button-large install-btn" onclick="mobileApp.installWPAApp(${JSON.stringify(app).replace(/"/g, '&quot;')})">
                            <i class="fas fa-download"></i> –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
                        </button>` : ''}
                        <button class="button button-outline button-large" onclick="window.open('${app.website}', '_blank')">
                            <i class="fas fa-external-link-alt"></i> –û—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ
                        </button>
                    </div>
                </div>
            </div>
        `;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è
        const closeBtn = modal.querySelector('.close-btn');
        closeBtn.addEventListener('click', () => {
            modal.remove();
        });
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                modal.remove();
            }
        });
        
        document.body.appendChild(modal);
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    showCategoryApps(category) {
        console.log('üìÇ –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', category.name);
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        this.showPage('home');
        
        // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ, —á—Ç–æ–±—ã —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å
        setTimeout(() => {
            this.showCategoryAppsContent(category);
        }, 100);
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    showCategoryAppsContent(category) {
        console.log('üéØ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', category.name);
        
        try {
            let categoryApps = [];
            
            // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ GitHub
            if (typeof ConfigManager !== 'undefined' && window.GitHubDB) {
                const useGitHub = ConfigManager.get('github.useIssuesAsDB', true);
                
                if (useGitHub) {
                    console.log('üì° –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ GitHub...');
                    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É –∏–∑ GitHub –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                }
            }
            
            // Fallback –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            if (categoryApps.length === 0 && typeof WPA_DATA !== 'undefined') {
                console.log('üìÇ Fallback –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', category.name);
                categoryApps = WPA_DATA.apps.filter(app => 
                    app.category === category.id && 
                    app.status !== 'rejected'
                );
            }
            
            console.log(`üìã –ù–∞–π–¥–µ–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${category.name}:`, categoryApps.length);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
            this.updateCategoryHeaders(category.name);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            if (categoryApps.length > 0) {
                this.renderApps(categoryApps, 'featuredApps');
                this.renderApps(categoryApps, 'recentApps');
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                this.showNotification(`üìÇ –ü–æ–∫–∞–∑–∞–Ω–æ ${categoryApps.length} –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${category.name}"`, 'info');
            } else {
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
                this.showNoAppsInCategory(category.name);
            }
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', error);
            this.showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏', 'error');
        }
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    updateCategoryHeaders(categoryName) {
        console.log('üè∑Ô∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', categoryName);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
        const featuredTitle = document.querySelector('.block-title');
        if (featuredTitle) {
            featuredTitle.innerHTML = `üìÇ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è: ${categoryName}`;
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–µ–¥–∞–≤–Ω–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
        const recentTitle = document.querySelectorAll('.block-title')[1];
        if (recentTitle) {
            recentTitle.innerHTML = `‚≠ê –í—Å–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${categoryName}"`;
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞
        this.addBackToAllButton();
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫–æ –≤—Å–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º
    addBackToAllButton() {
        console.log('üîô –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞');
        
        // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É, –µ—Å–ª–∏ –µ—Å—Ç—å
        const existingBtn = document.querySelector('.back-to-all-btn');
        if (existingBtn) {
            existingBtn.remove();
        }
        
        // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞
        const backBtn = document.createElement('button');
        backBtn.className = 'button button-outline button-small back-to-all-btn';
        backBtn.innerHTML = '<i class="fas fa-arrow-left"></i> –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è';
        backBtn.style.margin = '0 1rem 1rem';
        
        backBtn.addEventListener('click', () => {
            console.log('üîô –í–æ–∑–≤—Ä–∞—Ç –∫–æ –≤—Å–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º');
            this.loadHomePage();
        });
        
        // –í—Å—Ç–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞
        const firstTitle = document.querySelector('.block-title');
        if (firstTitle) {
            firstTitle.parentNode.insertBefore(backBtn, firstTitle.nextSibling);
        }
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    showNoAppsInCategory(categoryName) {
        console.log('üì≠ –ü–æ–∫–∞–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', categoryName);
        
        const featuredApps = document.getElementById('featuredApps');
        const recentApps = document.getElementById('recentApps');
        
        if (featuredApps) {
            featuredApps.innerHTML = `
                <div class="no-apps">
                    <i class="fas fa-folder-open" style="font-size: 2rem; color: #ccc; margin-bottom: 1rem;"></i>
                    <p>–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${categoryName}" –ø–æ–∫–∞ –Ω–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π</p>
                    <button class="button button-fill" onclick="mobileApp.showPage('submit')">
                        <i class="fas fa-plus"></i> –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
                    </button>
                </div>
            `;
        }
        
        if (recentApps) {
            recentApps.innerHTML = '';
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
        this.updateCategoryHeaders(categoryName);
        this.addBackToAllButton();
    }

    // –û–¥–æ–±—Ä–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    async approveApp(appId) {
        console.log('‚úÖ –û–¥–æ–±—Ä–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', appId);
        
        try {
            // –í—Å–µ–≥–¥–∞ –ø—ã—Ç–∞–µ–º—Å—è –æ–¥–æ–±—Ä–∏—Ç—å –≤ GitHub (–ø—É–±–ª–∏—á–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥)
            if (typeof ConfigManager !== 'undefined' && window.GitHubDB) {
                const useGitHub = ConfigManager.get('github.useIssuesAsDB', true);
                
                if (useGitHub) {
                    const token = ConfigManager.get('github.token', '');
                    if (!token) {
                        this.showNotification('‚ö†Ô∏è –ù—É–∂–µ–Ω GitHub —Ç–æ–∫–µ–Ω –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –µ–≥–æ –≤ —Ä–∞–∑–¥–µ–ª–µ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"', 'error');
                        this.showPage('settings');
                        return;
                    }
                    
                    console.log('üì° –û–¥–æ–±—Ä–µ–Ω–∏–µ –≤ GitHub...');
                    const githubDB = new GitHubDB({
                        owner: ConfigManager.get('github.owner', 'maggpro'),
                        repo: ConfigManager.get('github.repo', 'wpastore'),
                        token: token
                    });
                    
                    await githubDB.approveApp(appId);
                    this.showNotification('üéâ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ–¥–æ–±—Ä–µ–Ω–æ –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ!', 'success');
                    console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ–¥–æ–±—Ä–µ–Ω–æ –≤ GitHub');
                    
                    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
                    await this.loadPendingApps();
                    await this.loadHomePage();
                    return;
                }
            }
            
            // Fallback –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            if (typeof DataManager !== 'undefined') {
                if (DataManager.approveApp(appId)) {
                    this.showNotification('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ–¥–æ–±—Ä–µ–Ω–æ –ª–æ–∫–∞–ª—å–Ω–æ (–Ω–µ –≤ –ø—É–±–ª–∏—á–Ω–æ–º –∫–∞—Ç–∞–ª–æ–≥–µ)', 'warning');
                    this.loadPendingApps();
                    this.loadHomePage();
                } else {
                    this.showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è', 'error');
                }
            } else {
                this.showNotification('–°–∏—Å—Ç–µ–º–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞', 'error');
            }
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);
            this.showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏: ' + error.message, 'error');
        }
    }

    // –û—Ç–∫–ª–æ–Ω–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    async rejectApp(appId) {
        console.log('‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', appId);
        
        try {
            // –í—Å–µ–≥–¥–∞ –ø—ã—Ç–∞–µ–º—Å—è –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –≤ GitHub (–ø—É–±–ª–∏—á–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥)
            if (typeof ConfigManager !== 'undefined' && window.GitHubDB) {
                const useGitHub = ConfigManager.get('github.useIssuesAsDB', true);
                
                if (useGitHub) {
                    const token = ConfigManager.get('github.token', '');
                    if (!token) {
                        this.showNotification('‚ö†Ô∏è –ù—É–∂–µ–Ω GitHub —Ç–æ–∫–µ–Ω –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –µ–≥–æ –≤ —Ä–∞–∑–¥–µ–ª–µ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"', 'error');
                        this.showPage('settings');
                        return;
                    }
                    
                    console.log('üì° –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –≤ GitHub...');
                    const githubDB = new GitHubDB({
                        owner: ConfigManager.get('github.owner', 'maggpro'),
                        repo: ConfigManager.get('github.repo', 'wpastore'),
                        token: token
                    });
                    
                    await githubDB.rejectApp(appId);
                    this.showNotification('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ', 'info');
                    console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ –≤ GitHub');
                    
                    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
                    await this.loadPendingApps();
                    return;
                }
            }
            
            // Fallback –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            if (typeof DataManager !== 'undefined') {
                if (DataManager.rejectApp(appId)) {
                    this.showNotification('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ –ª–æ–∫–∞–ª—å–Ω–æ', 'info');
                    this.loadPendingApps();
                } else {
                    this.showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è', 'error');
                }
            } else {
                this.showNotification('–°–∏—Å—Ç–µ–º–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞', 'error');
            }
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);
            this.showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏: ' + error.message, 'error');
        }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    async handleAppSubmission() {
        console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
        
        const formData = {
            name: document.getElementById('appName').value.trim(),
            description: document.getElementById('appDescription').value.trim(),
            category: document.getElementById('appCategory').value,
            developer: document.getElementById('appDeveloper').value.trim(),
            version: document.getElementById('appVersion').value.trim() || '1.0.0',
            website: document.getElementById('appWebsite').value.trim(),
            icon: document.getElementById('appIcon').value.trim(),
            screenshots: document.getElementById('appScreenshots').value.trim()
                .split(',')
                .map(url => url.trim())
                .filter(url => url && this.isValidUrl(url)),
            features: []
        };

        console.log('–î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã:', formData);

        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        if (!formData.name || !formData.description || !formData.category || !formData.developer) {
            this.showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è', 'error');
            return;
        }

        if (!formData.website || !this.isValidUrl(formData.website)) {
            this.showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL –≤–µ–±-—Å–∞–π—Ç–∞', 'error');
            return;
        }

        if (formData.icon && !this.isValidUrl(formData.icon)) {
            this.showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL –∏–∫–æ–Ω–∫–∏', 'error');
            return;
        }

        try {
            // –°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            if (typeof DataManager !== 'undefined') {
                const newApp = DataManager.addApp(formData);
                this.showNotification('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é!', 'success');
                console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –ª–æ–∫–∞–ª—å–Ω–æ:', newApp);
                
                // –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ GitHub (–µ—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∞)
                if (typeof ConfigManager !== 'undefined' && window.GitHubDB) {
                    const useGitHub = ConfigManager.get('github.useIssuesAsDB', true);
                    const token = ConfigManager.get('github.token', '');
                    
                    if (useGitHub && token) {
                        console.log('üì§ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ GitHub (–∞–¥–º–∏–Ω —Ä–µ–∂–∏–º)...');
                        try {
                            const githubDB = new GitHubDB({
                                owner: ConfigManager.get('github.owner', 'maggpro'),
                                repo: ConfigManager.get('github.repo', 'wpastore'),
                                token: token
                            });
                            
                            await githubDB.addApp(formData);
                            this.showNotification('üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ç–∞–∫–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –ø—É–±–ª–∏—á–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥ GitHub!', 'success');
                            console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ GitHub');
                        } catch (githubError) {
                            console.log('‚ö†Ô∏è GitHub –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å, –Ω–æ –ª–æ–∫–∞–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ:', githubError);
                            this.showNotification('‚ÑπÔ∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –ª–æ–∫–∞–ª—å–Ω–æ. –ê–¥–º–∏–Ω –º–æ–∂–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –µ–≥–æ –ø–æ–∑–∂–µ.', 'info');
                        }
                    } else {
                        console.log('‚ÑπÔ∏è GitHub —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –ª–æ–∫–∞–ª—å–Ω–æ');
                        this.showNotification('‚ÑπÔ∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –ª–æ–∫–∞–ª—å–Ω–æ. –ê–¥–º–∏–Ω –º–æ–∂–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –µ–≥–æ –ø–æ–∑–∂–µ.', 'info');
                    }
                }
            } else {
                this.showNotification('‚ùå –û—à–∏–±–∫–∞: —Å–∏—Å—Ç–µ–º–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞', 'error');
                return;
            }
            
            // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
            document.getElementById('submitAppForm').reset();
            
            // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            this.showPage('home');
        } catch (error) {
            this.showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: ' + error.message, 'error');
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error);
        }
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è URL
    isValidUrl(string) {
        try {
            new URL(string);
            return true;
        } catch (_) {
            return false;
        }
    }

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    saveSettings() {
        console.log('üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫...');
        
        if (typeof ConfigManager !== 'undefined') {
            const owner = document.getElementById('githubOwner').value.trim();
            const repo = document.getElementById('githubRepo').value.trim();
            const token = document.getElementById('githubToken').value.trim();
            const useIssues = document.getElementById('useIssuesAsDB').value === 'true';

            ConfigManager.set('github.owner', owner);
            ConfigManager.set('github.repo', repo);
            ConfigManager.set('github.token', token);
            ConfigManager.set('github.useIssuesAsDB', useIssues);

            this.showNotification('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!', 'success');
            
            // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –≤–∫–ª—é—á–∏–ª–∏ GitHub
            if (useIssues) {
                setTimeout(() => this.loadData(), 1000);
            }
        } else {
            this.showNotification('ConfigManager –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω', 'error');
        }
    }

    // –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
    clearCache() {
        console.log('üßπ –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞...');
        
        try {
            if (typeof DataManager !== 'undefined') {
                DataManager.clearCache();
                this.showNotification('‚úÖ –ö—ç—à –æ—á–∏—â–µ–Ω! –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É...', 'success');
                
                // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
                setTimeout(() => {
                    window.location.reload();
                }, 2000);
            } else {
                this.showNotification('‚ùå DataManager –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω', 'error');
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞:', error);
            this.showNotification('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞: ' + error.message, 'error');
        }
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ–±—ã—Ç–∏–π
    setupEvents() {
        console.log('üéØ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ–±—ã—Ç–∏–π...');
        
        // –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
        const saveSettingsBtn = document.getElementById('saveSettings');
        if (saveSettingsBtn) {
            saveSettingsBtn.addEventListener('click', () => this.saveSettings());
            console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');
        } else {
            console.error('‚ùå –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        }
        
        // –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞
        const clearCacheBtn = document.getElementById('clearCache');
        if (clearCacheBtn) {
            clearCacheBtn.addEventListener('click', () => this.clearCache());
            console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');
        } else {
            console.error('‚ùå –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        }
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showNotification(message, type = 'info') {
        console.log(`üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ [${type}]:`, message);
        
        if (typeof Utils !== 'undefined') {
            Utils.showNotification(message, type);
        } else {
            // Fallback —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            const notification = document.createElement('div');
            notification.className = `notification notification-${type}`;
            notification.textContent = message;
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.remove();
            }, 3000);
        }
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
let mobileApp;
document.addEventListener('DOMContentLoaded', () => {
    console.log('üåê DOM –∑–∞–≥—Ä—É–∂–µ–Ω, —Å–æ–∑–¥–∞–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...');
    mobileApp = new WPAMobileApp();
    
    // –î–µ–ª–∞–µ–º mobileApp –¥–æ—Å—Ç—É–ø–Ω—ã–º –≥–ª–æ–±–∞–ª—å–Ω–æ
    window.mobileApp = mobileApp;
    window.wpaMobileApp = mobileApp; // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ –∏–º—è –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    
    console.log('‚úÖ mobileApp –¥–æ–±–∞–≤–ª–µ–Ω –≤ window:', !!window.mobileApp);
});




